include: "rules/common.smk"

##### Target Rules #####

# define rules that don't need to be run on a compute node.
# i.e. those that can be run locally.
localrules: all, echo_RG_fixed, genome_faidx, genome_dict, make_scaff_group_interval_lists, make_chromo_interval_lists, make_scatter_interval_lists, haploidize_bam_sections
# other local rules
# combine_bcftools_stats, gatk3_register, species_sample_lists, get_genome_length, get_ave_depths


rule all:
    input:
        "results/flags/chromcompare_installed",
        "results/flags/pcangsd_installed",
        #expand("results/pca/scat_regions/{scat}.scat_regions.tsv", scat=unique_scats),
        #expand("results/bcf/beagle-gl/sections/{scat}.beagle-gl.gz", scat=unique_scats),
        #"results/bcf/beagle-gl/beagle-gl.gz",
        #"results/psmc-test/psmc-plot-all-test/all-together",
        #expand("results/psmc-plot-subsamp/{psmc_id}/{subsamp}", psmc_id=psmc_id, subsamp=subsamp)
        
        
        #hpsmc outputs
        #expand("results/hpsmc/haploidize_bam_sect/{s}/{chrom}_haploidized.fa", s=sample_list, chrom=unique_chromosomes)
        #expand("results/psmc-test/psmcfa-test/{s}.psmcfa", s=sample_list),

        #expand("results/mapping/mkdup/mkdup-{s}.bam", s=sample_list), #mapping final output
        #expand("results/mapping/gatk-rmdup/{s}.bam", s=sample_list), #mapping rmdup final output
        #expand("results/angsd_bams/overlap_clipped/{s}.bam", s=sample_list), #angsd-bams output
        #expand("results/calling/corrected_missing_vcf_sect/{sgc}.vcf.gz", sgc=sg_or_chrom), #calling final output
        #expand("results/bcf/all.bcf"), #hardfiltering final outputs
        #expand("results/bcf/all.bcf.csi"), #hardfiltering final outputs
        #expand("results/bcf/all-that-pass-maf-{maf}.bcf", maf=mafs,), #hardfiltering final outputs
        #expand("results/bcf/all-that-pass-maf-{maf}.bcf.csi", maf=mafs,), #hardfiltering final outputs
        
        #troubleshooting RG errors
        #expand("results/angsd_bams/echo-RG-fixed/{s}.txt", s=sample_list),
        
        #calling intermediate outputs 
        #expand("results/calling/interval_lists/{scaff_group}.list", scaff_group=unique_scaff_groups),
        #expand("results/calling/interval_lists/{chromo}.list", chromo=unique_chromosomes),
        #expand("results/calling/vcf_sections/{sgc}/{scat}.vcf.gz", sgc=sg_or_chrom, scat=unique_scats),
        #expand("results/calling/vcf_sections/{sgc}.vcf.gz", sgc=sg_or_chrom),
        #expand("results/calling/genomics_db/{sgc}", sgc=sg_or_chrom), #calling intermediate output
        #expand("results/calling/gvcf/{s}.{ext}", s=sample, ext = ["g.vcf.gz", "g.vcf.gz.tbi"]), #calling intermediate output
        #expand("results/vcf_sections/{sgc}.{ext}", sgc=sg_or_chrom, ext = ["vcf.gz", "vcf.gz.tbi"]), #calling intermediate output
        #expand("results/scatter_config/scatters_{bs}.tsv", bs=binsize), #generate scatters file from scatter_intervals_file
        
        #expand("results/psmc-test/psmc-consensus-sequence-test/{s}.fq.gz", s=sample_list), #psmc/psmc-test initial output
        #expand("results/psmc/psmc-plot/{s}.eps", s=sample_list), #PSMC final outputs, does weird things with file endings to this needs some help
        #expand("results/psmc/psmc-plot/{s}.par", s=sample_list),

        #qc outputs
        #expand("results/qc/samtools_stats/{s}.txt", s=sample_list),
        #expand("results/qc/bcftools_stats/all-{fc}.txt", fc=["ALL", "PASS", "FAIL"],),
        #expand("results/qc/bcftools_stats/all-pass-maf-{maf}.txt", maf=mafs,),
        #expand("results/qc/bcftools_stats/all-pass-maf-{maf}.txt", maf=config["bqsr_maf"], bq=[str(x) for x in range(0, int(config["bqsr_rounds"])+1)]),
        #expand("results/qc/coverage-depth/{s}.txt", s=sample_list),
        #"results/qc/coverage-depth/avg-count/above-10.txt",
        #"results/qc/coverage-depth/avg-count/avg-depth.txt",

        #expand("results/qc/coverage/{s}.txt", s=SAMPLES),
        #"annotated/all.vcf.gz",
        #"qc/multiqc.html",
        #"plots/depths.svg",
        #"plots/allele-freqs.svg",
        


##### Modules #####

include: "rules/ref.smk"
include: "rules/mapping.smk"
include: "rules/angsd-ready-bams.smk"
include: "rules/calling.smk"
include: "rules/hardfilter.smk"
include: "rules/psmc.smk"
include: "rules/psmc-testing.smk"
include: "rules/hpsmc.smk"
include: "rules/qc.smk"
include: "rules/destination-rules.smk"
include: "rules/pca.smk"
#include: "rules/archive.smk"
#include: "rules/annotation.smk"
#include: "rules/downsample.smk"
#include: "rules/force-call-vcf.smk"