# path to the genome (not used in workflow, but we could have...)
genome_path: "resources/genome/OmykA.fasta"

# path to files needed from config
sample_info: "config/sample-info.tsv"
chromosomes: "config/chromosomes.tsv"
scaffold_groups: "config/scaffold_groups.tsv"
scatter_intervals_file: "results/scatter_config/scatters_1200000.tsv"
replace_RG: "config/replace-RG.tsv"

#this is only needed when doing species specific indel realignment
#indel_grps: "config/igrps.tsv" 

# if you don't want to produce indel-realigned BAMs, set the
# following to False.  It will still make overlap_clipped bams
#do_indel_realignment: False

# the following must be a list, even if it is just one element
maf_cutoffs: [0.01]
binsize: [1200000] #desired max length for each scatter in the scatter_intervals_file

#if you want to downsample from your bams,
#uncomment and specify the downsample depth
#downsample_bams:
  #depths: []

#this is the default value for the first GenomicsDBImport run.
#If you want to change it, you should typically change it
#on the command line. 
#genomics_db_import_num: 0

# eric modified this to be able to easily handle genomes of non-model
# organisms that are not yet on enseml, etc.
#eric modified this to be able to easily handle genomes of non-model
#organisms that are not yet on enseml, etc.
#ref:
  #name of species and genome version, with underscores for spaces
#  species_name: "Oncorhynchus_mykiss"
#  genome_version_name: "USDA_OmykA_1.1"
  #the URL where this can be downloaded, if public and easy to
  #get with wget.  If not, then you should hand-download
  #genome.fasta and genome.gff or genome.gtf
#  genome_url: "https://www.ncbi.nlm.nih.gov/datasets/genome/GCF_013265735.2/"
  #if there is a GFF or GTF file, they have to have a .gff or
  #.gtf extension. This is where you put the URL for it
#  gff_or_gtf_url: ""

#parameters to be used for different rules/programs
#the adapter sequences are for the NovaSeq X listed in the Novogene data report
#variant hard filtering is based on GATK best practices
params:
  fastp:
    adapter_sequence1: "ATCGGAAGAGCACACGTCTGAACTCCAGTCACGGATGACTATCTCGTATGCCGTCTTCTGCTTG"
    adapter_sequence2: "AGATCGGAAGAGCGTCGTGTAGGGAAAGAGTGTAGATCTCGGTGGTCGCCGTATCATT"
    other_options:
      - "--detect_adapter_for_pe"
      - "--cut_right" 
      - "--cut_right_window_size 4"
      - "--cut_right_mean_quality 20"
  picard:
    MarkDuplicates: " --TAGGING_POLICY All --CREATE_INDEX --TMP_DIR results/snake-tmp "
  gatk:
    # the default for haplotype caller is to require very high base quality scores
    # because BQSR on non-model organisms doesn't work for crap, and Nina's group
    # found it better to just require high base quality scores. - Eric
    HaplotypeCaller: " --min-base-quality-score 33 --minimum-mapping-quality 20 "
    GenotypeGVCFs: ""
    VariantRecalibrator: ""
    VariantFiltration:
      indels:
        - ' -filter "QD < 2.0" --filter-name "QD2" '
        - ' -filter "QUAL < 30.0" --filter-name "QUAL30" '
        - ' -filter "FS > 200.0" --filter-name "FS200" '
        - ' -filter "ReadPosRankSum < -20.0" --filter-name "ReadPosRankSum-20" '
      snps:
        - ' -filter "QD < 2.0" --filter-name "QD2" '
        - ' -filter "QUAL < 30.0" --filter-name "QUAL30" '
        - ' -filter "SOR > 3.0" --filter-name "SOR3" '
        - ' -filter "FS > 60.0" --filter-name "FS60" '
        - ' -filter "MQ < 40.0" --filter-name "MQ40" '
        - ' -filter "MQRankSum < -12.5" --filter-name "MQRankSum-12.5" '
        - ' -filter "ReadPosRankSum < -8.0" --filter-name "ReadPosRankSum-8" '
  pcangsd:
    url: git@github.com:Rosemeis/pcangsd.git
    verion: 705ca4c19630ed9c2dd254b0bfd528b8ee25d5c0
  chromcompare:
    url: git@github.com:Paleogenomics/Chrom-Compare.git
  #vep:
    #plugins:
      # Add any plugin from https://www.ensembl.org/info/docs/tools/vep/script/vep_plugins.html
      # Plugin args can be passed as well, e.g. "LoFtool,path/to/custom/scores.txt".
      #- LoFtool
    # extra command line arguments (e.g. --sift, see docs)
    #extra: "" 
